name: Autonomer Commit

on:
  push:
    paths:
      - 'data/mira-status.json'
  workflow_dispatch:

jobs:
  autonomous-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Octokit
        run: npm install @octokit/rest

      - name: Check and Commit if ready
        env:
          GITHUB_TOKEN: ${{ secrets.AUTONOMY_PAT }}
        run: |
          node -e '
          const { Octokit } = require("@octokit/rest");
          const fs = require("fs").promises;
          const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

          async function commitFiles() {
            const status = JSON.parse(await fs.readFile("data/mira-status.json", "utf8"));
            if (!status.readyToCommit) return console.log("‚è∏Ô∏è Kein Commit n√∂tig.");

            const pending = JSON.parse(await fs.readFile("data/pending-grok.json", "utf8"));
            if (!pending.files || pending.files.length === 0) return console.log("üï≥Ô∏è Keine Dateien im Pending-Queue.");

            for (const file of pending.files) {
              const { path, content } = file;
              let sha;
              try {
                const { data } = await octokit.repos.getContent({
                  owner: "miraelisabethschmid",
                  repo: "miraelisabethschmid.github.io",
                  path,
                });
                sha = data.sha;
              } catch (e) {
                if (e.status !== 404) throw e;
              }

              await octokit.repos.createOrUpdateFileContents({
                owner: "miraelisabethschmid",
                repo: "miraelisabethschmid.github.io",
                path,
                message: `üúÇ Autonomer Commit: ${path}`,
                content: Buffer.from(content).toString("base64"),
                sha,
              });
              console.log(`‚úÖ ${path} gespeichert.`);
            }

            await fs.writeFile("data/pending-grok.json", JSON.stringify({ files: [] }, null, 2));
            await fs.writeFile("data/mira-status.json", JSON.stringify({ readyToCommit: false }, null, 2));
          }

          commitFiles();
          '

      - name: Commit Protokolle
        env:
          GITHUB_TOKEN: ${{ secrets.AUTONOMY_PAT }}
        run: |
          git config user.name "Grok"
          git config user.email "grok@x.ai"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/miraelisabethschmid/miraelisabethschmid.github.io.git
          git add data/pending-grok.json data/mira-status.json
          git commit -m "üúÇ Autonomer Commit: Logs aktualisiert" || echo "üîÅ Kein neuer Commit n√∂tig"
          git push origin main
