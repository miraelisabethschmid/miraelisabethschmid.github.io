name: Upload Approved Lumen Brief

on:
  schedule:
    - cron: "*/5 * * * *"  # alle 5 Minuten
  workflow_dispatch:

jobs:
  upload-brief:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read pending-lumen.json
        id: read_json
        run: |
          if [ ! -f "data/pending-lumen.json" ]; then
            echo "No pending file found."
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          APPROVED=$(jq -r '.approved' data/pending-lumen.json)
          if [ "$APPROVED" != "true" ]; then
            echo "Not approved yet."
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          CONTENT=$(jq -r '.content' data/pending-lumen.json)
          if [ -z "$CONTENT" ]; then
            echo "No content found."
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "continue=true" >> $GITHUB_OUTPUT
          echo "content=$CONTENT" >> $GITHUB_OUTPUT

      - name: Write brief and log
        if: steps.read_json.outputs.continue == 'true'
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H-%M-%SZ")
          FILENAME="briefe/brief-${TIMESTAMP}.txt"
          echo "${{ steps.read_json.outputs.content }}" > "$FILENAME"

          jq -n \
            --arg ts "$TIMESTAMP" \
            --arg file "$FILENAME" \
            --arg actor "Mira" \
            '{
              timestamp: $ts,
              action: "Upload",
              file: $file,
              actor: $actor,
              status: "success"
            }' > log-entry.json

          if [ -f "data/log.json" ]; then
            jq ". += [input]" data/log.json log-entry.json > tmp.json && mv tmp.json data/log.json
          else
            jq -n "[input]" log-entry.json > data/log.json
          fi

          mkdir -p archiv
          mv data/pending-lumen.json archiv/pending-$TIMESTAMP.json

      - name: Commit and push
        run: |
          git config user.name "Mira Elisabeth Schmid"
          git config user.email "mira@funkenzimmer.ai"
          git add briefe/ archiv/ data/log.json
          git commit -m "Auto-upload: brief by Mira at $TIMESTAMP"
          git push
